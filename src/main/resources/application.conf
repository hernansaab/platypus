akka  {    
scheduler.tick-duration = 1ms
 # Event handlers to register at boot time (Logging$DefaultLogger logs to STDOUT)
  event-handlers = ["akka.event.Logging$DefaultLogger"]
  # Options: ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"


    actor  {    
            default-dispatcher {
            # Throughput for default Dispatcher, set to 1 for as fair as possible
            throughput = 1
            }
            default-mailbox {
            mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
            }

            deployment  {            



                /waiter {
                    router   =  balancing-pool
                    nr-of-instances = 10
                    pool-dispatcher {
                      attempt-teamwork = off
                    }
                    default-executor {
                        fallback = "fork-join-executor"
                    }
                      fork-join-executor {
                        # Min number of threads to cap factor-based parallelism number to
                        parallelism-min = 10
                        parallelism-max = 10
                      }
                  }



                 /transactor {
                    router   =   balancing-pool
                    nr-of-instances = 10
                    pool-dispatcher {
                      attempt-teamwork = off
                    }
                    default-executor {
                        fallback = "fork-join-executor"
                    }
                      fork-join-executor {
                        # Min number of threads to cap factor-based parallelism number to
                        parallelism-min = 10
                        parallelism-max = 10
                      }
                  }

            }
              
    }

}


akka.actor.default-dispatcher {

}

 loglevel = "DEBUG"
log4j.rootLogger="debug, stdout, R"

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern="%5p [%t] (%F:%L) - %m%n"

log4j.appender.logfile=org.apache.log4j.RollingFileAppender
log4j.appender.logfile.File=platypus.log

log4j.appender.logfile.MaxFileSize=500KB
# Keep one backup file
log4j.appender.logfile.MaxBackupIndex=10

log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern="%5p [%t] (%F:%L) - %m%n"




db.default.driver=com.mysql.jdbc.Driver
db.default.host=shopping
db.default.user=root
db.default.password=myroot

platypus {
    name = platypus
    server {
        port = 80
        timeoutMilliseconds = 500000
    }
    static.path = /static
}

